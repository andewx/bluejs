class BlueJS{constructor(){this._tags=new Map,this._tagBindings=new Map,this._mutation=new MutationObserver(this.observe)}addBinding(t,e,i){var n=new Binding(e,i);this._tagBindings.set(t,n)}addTag(t,e){this._tags.has(t)||this._tags.set(t,e)}initiate(){this._mutation=new MutationObserver(this.observe),this.register(),this._mutation.observe(document.body,{childList:!0,subtree:!0})}register(){let t=document.querySelectorAll("[bluejs]");t.forEach(t=>{var e=t.getAttribute("bluejs"),i=t.getAttribute("bluejs-trigger"),n=t.getAttribute("bluejs-binding");"load"==i&&(t=document,i="DOMContentLoaded");var s=new TagElement(t,e,i,n);if(this.addTag(e,s),null==this._tagBindings.get(n)){console.log("Binding not found for "+n);return}this.setHandler(t,n,i,this._tagBindings.get(n)._handler),s._bound=!0})}observe(t){let e=bluejs;t.forEach(t=>{if("childList"==t.type){let i=Array.from(t.addedNodes).filter(t=>t.nodeType===Node.ELEMENT_NODE);i.forEach(t=>{let i=t.querySelectorAll("[bluejs]");i.forEach(t=>{let i=t.getAttribute("bluejs"),n=t.getAttribute("bluejs-trigger"),s=t.getAttribute("bluejs-binding");var r=new TagElement(t,i,n,s);e.addTag(t,i,r),e.setHandler(t,s,n),r._bound=!0})})}})}setHandler(t,e,i){if(console.log("Set handler for "+e+" on "+i),null==this._tagBindings.get(e)){console.log("Binding not found for "+e);return}var n=this._tagBindings.get(e)._handler;t.addEventListener(i,n)}}class Binding{constructor(t,e){this._context=t,this._handler=e}}class TagElement{constructor(t,e,i,n){this._tag=t,this._uuid=e,this._blue=n,this._trigger=i,this._bound=!1}}const bluejs=new BlueJS;
